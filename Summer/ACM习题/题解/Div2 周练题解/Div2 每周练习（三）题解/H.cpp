#include <cstdio>
#include <algorithm>
using namespace std;

int N;
int A[2100],B[2100];
int ans;
int main(){
	while(~scanf("%d",&N) && N){
		ans = 0;
		for(int i = 1; i <= N; i++)scanf("%d",A + i);
		for(int i = 1; i <= N; i++)scanf("%d",B + i);
		sort(A + 1,A + 1 + N);sort(B + 1,B + 1 + N);
		int la = 1,lb = 1,ra = N,rb = N;
		while(la <= ra){
			int t = 200;
			if(A[ra] != B[rb])
			{//最强的两个如果不一样强
				if(A[ra] < B[rb])
					t = -t,la++,rb--;
				//如果王的强，那么把我们的菜鸡献祭出去
				else ra--,rb--;
				//否则直接赢一把
			} 
			else
			{//如果最强的两个一样强
				if(A[la] > B[lb])
				{
                        //如果我们的菜鸡比较强，那么我们先赢一把
					la++,lb++;
				}
				else
				{//如果我们的比较垃圾
					if(A[la] < B[rb])t = -t;
					//就把我们的菜鸡献祭出去啊
					else if(A[la] == B[rb])t = 0;la++,rb--;
					//如果我们的菜鸡和王的最强一样强，那么把菜鸡献祭出去
				}
			}
			ans += t;
		}
		printf("%d\n",ans);
	}
	return 0;
}

/*
贪心策略：
1，如果田忌的最快马快于齐王的最快马，则两者比。
（因为若是田忌的别的马很可能就赢不了了，所以两者比）
2，如果田忌的最快马慢于齐王的最快马，则用田忌的最慢马和齐王的最快马比。
（由于所有的马都赢不了齐王的最快马，所以用损失最小的，拿最慢的和他比）
3，若相等，则比较田忌的最慢马和齐王的最慢马
3.1，若田忌最慢马快于齐王最慢马，两者比。
（田忌的最慢马既然能赢一个就赢呗，而且齐王的最慢马肯定也得有个和他比，所以选最小的比他快得。）
3.2，其他，则拿田忌的最慢马和齐王的最快马比。
（反正所有的马都比田忌的最慢马快了，所以这匹马必输，选贡献最大的，干掉齐王的最快马）

*/
